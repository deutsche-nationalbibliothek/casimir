% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrap_helpers.r
\name{generate_replicate_results}
\alias{generate_replicate_results}
\alias{generate_replicate_results_dplyr}
\title{Compute n_bt bootstrap replica, wrapping the composure of
compute_intermediate_results summarise_intermediate_results}
\usage{
generate_replicate_results(
  base_compare,
  n_bt,
  grouping_var,
  seed = NULL,
  ps_flags = list(intermed = FALSE, summarise = FALSE),
  label_distribution = NULL,
  cost_fp = NULL,
  progress = options::opt("progress")
)

generate_replicate_results_dplyr(
  base_compare,
  n_bt,
  grouping_var,
  seed = NULL,
  label_distribution = NULL,
  ps_flags = list(intermed = FALSE, summarise = FALSE),
  cost_fp = NULL,
  progress = FALSE
)
}
\arguments{
\item{base_compare}{a \code{data.frame} as generate by create_comparison}

\item{n_bt}{an integer number of resamples to undergo in bootstrapping}

\item{grouping_var}{character vector of variables that must be present in
base_compare}

\item{seed}{pass seed to resampling step for reproducibility}

\item{ps_flags}{list as returned by \code{set_ps_flags}}

\item{label_distribution}{as in compute_set_retrieval_scores}

\item{cost_fp}{numeric > 0, default is NULL}

\item{progress}{Display progress bars for iterated computations (like bootstrap CI or
PR-Curves) (Defaults to \code{FALSE}, overwritable using option 'casimir.progress' or environment variable 'R_CASIMIR_PROGRESS')}
}
\value{
\code{data.frame} containing \code{n_bt} boot replica of results
as returned by compute_intermediate_results +
summarise_intermediate_results
}
\description{
Compute n_bt bootstrap replica, wrapping the composure of
compute_intermediate_results summarise_intermediate_results
}
\section{Functions}{
\itemize{
\item \code{generate_replicate_results_dplyr()}: variant with dplyr based
internals rather then collapse internals

}}
\examples{

library(casimir)

gold <- tibble::tribble(
    ~doc_id, ~label_id,
    "A", "a",
    "A", "b",
    "A", "c",
    "B", "a",
    "B", "d",
    "C", "a",
    "C", "b",
    "C", "d",
    "C", "f"
)

pred<- tibble::tribble(
  ~doc_id, ~label_id,
  "A", "a",
  "A", "d",
  "A", "f",
  "B", "a",
  "B", "e",
  "C", "f"
)

base_compare <- casimir:::create_comparison(gold, pred)

boot_replica <- casimir:::generate_replicate_results(
  base_compare, n_bt = 10L,
  grouping_var = c("doc_id")
  )

}
