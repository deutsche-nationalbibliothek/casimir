% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_comparison.r
\name{create_comparison}
\alias{create_comparison}
\title{Join gold standard and predicted results in one table}
\usage{
create_comparison(
  gold_standard,
  predicted,
  doc_strata = NULL,
  label_dict = NULL,
  graded_relevance = FALSE,
  propensity_scored = FALSE,
  label_distribution = NULL,
  .ignore_relevance_warning = FALSE
)
}
\arguments{
\item{gold_standard}{expects data.frame with cols
"label_id", "doc_id", "score"}

\item{predicted}{expects data.frame with cols
"label_id", "doc_id", "score"}

\item{doc_strata}{variable that should be preserved, with a fixed mapping of
doc_strata and doc_id}

\item{label_dict}{two-column data.frame with col "label_id" and a second
column that defines groups of labels to stratify by}

\item{graded_relevance}{logical indicator for graded relevance. Defaults to
\code{FALSE} for binary relevance. If set to \code{TRUE}, the
\code{predicted} data.frame should contain a numeric column
\emph{"relevance"} with values in the range of \code{c(0, 1)}.}

\item{propensity_scored}{logical, whether to use propensity scores as weights}

\item{label_distribution}{expects \code{data.frame} with cols
\emph{"label_id", "label_freq", "n_docs"}. \code{label_freq} corresonds to
the number of occurences a label has in the gold_standard. \code{n_docs}
corresponds to the total number of documents in the gold_standard.}

\item{.ignore_relevance_warning}{logical, if graded_relevance = FALSE, but
column relevance is present in predicted, a warning can be silenced by
setting .ignore_relevance_warning = TRUE}
}
\value{
data.frame with cols "label_id", "doc_id", "suggested", "gold"
}
\description{
Join gold standard and predicted results in one table
}
\examples{
library(casimir)

gold <- tibble::tribble(
    ~doc_id, ~label_id,
    "A", "a",
    "A", "b",
    "A", "c",
    "B", "a",
    "B", "d",
    "C", "a",
    "C", "b",
    "C", "d",
    "C", "f"
)

pred<- tibble::tribble(
  ~doc_id, ~label_id,
  "A", "a",
  "A", "d",
  "A", "f",
  "B", "a",
  "B", "e",
  "C", "f"
)

casimir::create_comparison(gold, pred)
}
