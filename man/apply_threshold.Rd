% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/thresholding_functions.R
\name{apply_threshold}
\alias{apply_threshold}
\title{Helper function for filtering preditions with score above a certain threshold
or rank below some limit rank.}
\usage{
apply_threshold(threshold, limit = NA_real_, base_compare)
}
\arguments{
\item{threshold}{numeric threshold between 0 and 1}

\item{limit}{integer cutoff >= 1 for rankbased thresholding. Requires column
\code{"gold"} in input \code{base_compare}}

\item{base_compare}{\code{data.frame} as created by \code{create_comparison}, containing
cols \code{c("gold", "score")}}
}
\value{
\code{data.frame} with observations that satisfy
(\code{score > threshold} AND (if appliccable) \code{rank <= limit})
OR \code{gold == TRUE}
A new logical column \code{suggested} indicates true, if
score > threshold AND (if appliccable) rank <= limit
Otherwise false for false negative observations (that may have no score,
a score below the threshold or rank above limit)
}
\description{
Helper function for filtering preditions with score above a certain threshold
or rank below some limit rank.
}
\examples{

gold <- tibble::tribble(
  ~doc_id, ~label_id,
  "A", "a",
  "A", "b",
  "A", "c",
  "B", "a",
  "B", "d",
  "C", "a",
  "C", "b",
  "C", "d",
  "C", "f"
)

pred <- tibble::tribble(
  ~doc_id, ~label_id, ~score,
  "A", "a", 0.9,
  "A", "d", 0.7,
  "A", "f", 0.3,
  "A", "c", 0.1,
  "B", "a", 0.8,
  "B", "e", 0.6,
  "B", "d", 0.1,
  "C", "f", 0.1,
  "C", "c", 0.2,
  "C", "e", 0.2
)

base_compare <- casimir:::create_comparison(gold, pred)
# apply zero as threshold should not change anything
res_0 <- casimir:::apply_threshold(
  threshold = 0.3,
  base_compare = base_compare
)
}
